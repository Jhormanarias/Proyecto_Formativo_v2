<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAE0GAABNBgAAAAAAAAAA
        AAAAAAAEAAAABAAAAAMAAAAAAAAAAQAAAAIAAAACAAAABQAAAAIAAAAAAAAAAgAAAAIAAAAAAAAAAQAA
        AAMAAAAEAAAABAAAAAEAAAAAAAAABAAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAwAAAAEAAAAAAAAAAgAA
        AAMAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAVgAAAFwAAAA7AAAAAAAAABEAAAAqAAAAJQAAAGUAAAAvAAAAAAAA
        ACoAAAAwAAAAAAAAABcAAABDAAAAVAAAAF0AAAAbAAAAAwAAAFoAAAAZAAAAAAAAAA8AAAASAAAAAAAA
        AEIAAAAUAAAAAAAAACsAAABJAAAAWQAAAFYAAAD7AAAA/wAAAK0AAAAAAAAAMQAAAH0AAABsAAAA/wAA
        AIoAAAAAAAAAfAAAAI0AAAAAAAAARgAAAMQAAAD3AAAA/wAAAFAAAAAKAAAA/wAAAEoAAAAAAAAALAAA
        ADUAAAAAAAAAwQAAADoAAAAAAAAAfgAAANYAAAD/AAAA/QAAAPgAAAD/AAAAqgAAAAAAAAAwAAAAegAA
        AGoAAAD/AAAAiAAAAAAAAAB6AAAAiwAAAAAAAABEAAAAwQAAAPMAAAD/AAAATgAAAAoAAAD/AAAASQAA
        AAAAAAArAAAANAAAAAAAAAC/AAAAOQAAAAAAAAB8AAAA0wAAAP8AAAD5AAAA+wAAAP8AAACsAAAAAAAA
        ADAAAAB8AAAAbAAAAP8AAACJAAAAAAAAAHwAAACNAAAAAAAAAEUAAADDAAAA9wAAAP8AAABPAAAACgAA
        AP8AAABKAAAAAAAAACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAAAH0AAADVAAAA/wAAAP0AAAD7AAAA/wAA
        AKwAAAAAAAAAMAAAAHwAAABsAAAA/wAAAIkAAAAAAAAAfAAAAI0AAAAAAAAARQAAAMMAAAD3AAAA/wAA
        AE8AAAAKAAAA/wAAAEoAAAAAAAAALAAAADUAAAAAAAAAwQAAADoAAAAAAAAAfQAAANYAAAD/AAAA/QAA
        APsAAAD/AAAArAAAAAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAAAAAAAAB8AAAAjQAAAAAAAABFAAAAwwAA
        APcAAAD/AAAATwAAAAoAAAD/AAAASgAAAAAAAAAsAAAANQAAAAAAAADBAAAAOgAAAAAAAAB9AAAA1gAA
        AP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAADAAAAB8AAAAbAAAAP8AAACJAAAAAAAAAHwAAACNAAAAAAAA
        AEUAAADDAAAA9wAAAP8AAABPAAAACgAAAP8AAABKAAAAAAAAACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAA
        AH0AAADWAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAAMAAAAHwAAABsAAAA/wAAAIkAAAAAAAAAfAAA
        AI0AAAAAAAAARQAAAMMAAAD3AAAA/wAAAE8AAAAKAAAA/wAAAEoAAAAAAAAALAAAADUAAAAAAAAAwQAA
        ADoAAAAAAAAAfQAAANYAAAD/AAAA/QAAAPsAAAD/AAAArAAAAAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAA
        AAAAAAB8AAAAjQAAAAAAAABFAAAAwwAAAPcAAAD/AAAATwAAAAoAAAD/AAAASgAAAAAAAAAsAAAANQAA
        AAAAAADBAAAAOgAAAAAAAAB9AAAA1gAAAP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAADAAAAB8AAAAbAAA
        AP8AAACJAAAAAAAAAHwAAACNAAAAAAAAAEUAAADDAAAA9wAAAP8AAABPAAAACgAAAP8AAABKAAAAAAAA
        ACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAAAH0AAADWAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAAMAAA
        AHwAAABsAAAA/wAAAIkAAAAAAAAAfAAAAI0AAAAAAAAARQAAAMMAAAD3AAAA/wAAAE8AAAAKAAAA/wAA
        AEoAAAAAAAAALAAAADUAAAAAAAAAwQAAADoAAAAAAAAAfQAAANYAAAD/AAAA/QAAAPsAAAD/AAAArAAA
        AAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAAAAAAAAB8AAAAjQAAAAAAAABFAAAAwwAAAPcAAAD/AAAATwAA
        AAoAAAD/AAAASgAAAAAAAAAsAAAANQAAAAAAAADBAAAAOgAAAAAAAAB9AAAA1gAAAP8AAAD9AAAA+wAA
        AP8AAACsAAAAAAAAADAAAAB8AAAAbAAAAP8AAACJAAAAAAAAAHwAAACNAAAAAAAAAEUAAADDAAAA9wAA
        AP8AAABPAAAACgAAAP8AAABKAAAAAAAAACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAAAH0AAADWAAAA/wAA
        AP0AAAD7AAAA/wAAAKwAAAAAAAAAMAAAAHwAAABsAAAA/wAAAIkAAAAAAAAAfAAAAI0AAAAAAAAARQAA
        AMMAAAD3AAAA/wAAAE8AAAAKAAAA/wAAAEoAAAAAAAAALAAAADUAAAAAAAAAwQAAADoAAAAAAAAAfQAA
        ANYAAAD/AAAA/QAAAPsAAAD/AAAArAAAAAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAAAAAAAAB8AAAAjQAA
        AAAAAABFAAAAwwAAAPcAAAD/AAAATwAAAAoAAAD/AAAASgAAAAAAAAAsAAAANQAAAAAAAADBAAAAOgAA
        AAAAAAB9AAAA1gAAAP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAADAAAAB8AAAAbAAAAP8AAACJAAAAAAAA
        AHwAAACNAAAAAAAAAEUAAADDAAAA9wAAAP8AAABPAAAACgAAAP8AAABKAAAAAAAAACwAAAA1AAAAAAAA
        AMEAAAA6AAAAAAAAAH0AAADWAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAAMAAAAHwAAABsAAAA/wAA
        AIkAAAAAAAAAfAAAAI0AAAAAAAAARQAAAMMAAAD3AAAA/wAAAE8AAAAKAAAA/wAAAEoAAAAAAAAALAAA
        ADUAAAAAAAAAwQAAADoAAAAAAAAAfQAAANYAAAD/AAAA/QAAAPsAAAD/AAAArAAAAAAAAAAwAAAAfAAA
        AGwAAAD/AAAAiQAAAAAAAAB8AAAAjQAAAAAAAABFAAAAwwAAAPcAAAD/AAAATwAAAAoAAAD/AAAASgAA
        AAAAAAAsAAAANQAAAAAAAADBAAAAOgAAAAAAAAB9AAAA1gAAAP8AAAD9AAAA+wAAAP8AAACsAAAAAAAA
        ADAAAAB8AAAAbAAAAP8AAACJAAAAAAAAAHwAAACNAAAAAAAAAEUAAADDAAAA9wAAAP8AAABPAAAACgAA
        AP8AAABKAAAAAAAAACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAAAH0AAADWAAAA/wAAAP0AAAD7AAAA/wAA
        AKwAAAAAAAAAMAAAAHwAAABsAAAA/wAAAIkAAAAAAAAAfAAAAI0AAAAAAAAARQAAAMMAAAD3AAAA/wAA
        AE8AAAAKAAAA/wAAAEoAAAAAAAAALAAAADUAAAAAAAAAwQAAADoAAAAAAAAAfQAAANYAAAD/AAAA/QAA
        APsAAAD/AAAArAAAAAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAAAAAAAAB8AAAAjQAAAAAAAABFAAAAwwAA
        APcAAAD/AAAATwAAAAoAAAD/AAAASgAAAAAAAAAsAAAANQAAAAAAAADBAAAAOgAAAAAAAAB9AAAA1gAA
        AP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAADAAAAB8AAAAbAAAAP8AAACJAAAAAAAAAHwAAACNAAAAAAAA
        AEUAAADDAAAA9wAAAP8AAABPAAAACgAAAP8AAABKAAAAAAAAACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAA
        AH0AAADWAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAAMAAAAHwAAABsAAAA/wAAAIkAAAAAAAAAfAAA
        AI0AAAAAAAAARQAAAMMAAAD3AAAA/wAAAE8AAAAKAAAA/wAAAEoAAAAAAAAALAAAADUAAAAAAAAAwQAA
        ADoAAAAAAAAAfQAAANYAAAD/AAAA/QAAAPsAAAD/AAAArAAAAAAAAAAwAAAAfAAAAGwAAAD/AAAAiQAA
        AAAAAAB8AAAAjQAAAAAAAABFAAAAwwAAAPcAAAD/AAAATwAAAAoAAAD/AAAASgAAAAAAAAAsAAAANQAA
        AAAAAADBAAAAOgAAAAAAAAB9AAAA1gAAAP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAADAAAAB8AAAAbAAA
        AP8AAACJAAAAAAAAAHwAAACNAAAAAAAAAEUAAADDAAAA9wAAAP8AAABPAAAACgAAAP8AAABKAAAAAAAA
        ACwAAAA1AAAAAAAAAMEAAAA6AAAAAAAAAH0AAADVAAAA/wAAAP0AAAD4AAAA/wAAAKoAAAAAAAAAMAAA
        AHoAAABqAAAA/wAAAIgAAAAAAAAAegAAAIsAAAAAAAAARAAAAMEAAADzAAAA/wAAAE4AAAAKAAAA/wAA
        AEkAAAAAAAAAKwAAADQAAAAAAAAAvwAAADkAAAAAAAAAfAAAANMAAAD/AAAA+QAAAPsAAAD/AAAArQAA
        AAAAAAAxAAAAfQAAAGwAAAD/AAAAigAAAAAAAAB8AAAAjQAAAAAAAABGAAAAxAAAAPcAAAD/AAAAUAAA
        AAoAAAD/AAAASgAAAAAAAAAsAAAANQAAAAAAAADBAAAAOgAAAAAAAAB+AAAA1gAAAP8AAAD9AAAAVgAA
        AFwAAAA7AAAAAAAAABEAAAAqAAAAJQAAAGUAAAAvAAAAAAAAACoAAAAwAAAAAAAAABcAAABDAAAAVAAA
        AF0AAAAbAAAAAwAAAFoAAAAZAAAAAAAAAA8AAAASAAAAAAAAAEIAAAAUAAAAAAAAACsAAABJAAAAWQAA
        AFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAEAAAAAwAAAAAAAAABAAAAAgAAAAIAAAAFAAAAAgAAAAAAAAACAAAAAgAA
        AAAAAAABAAAAAwAAAAQAAAAEAAAAAQAAAAAAAAAEAAAAAQAAAAAAAAABAAAAAQAAAAAAAAADAAAAAQAA
        AAAAAAACAAAAAwAAAAQAAAAEEEgEkP////8QSASQEEgEkBBIBJAQSASQEEgEkBBIBJAQSASQEEgEkBBI
        BJAQSASQEEgEkBBIBJAQSASQEEgEkBBIBJAQSASQEEgEkBBIBJAQSASQEEgEkBBIBJAQSASQEEgEkBBI
        BJAQSASQEEgEkBBIBJAQSASQ/////xBIBJA=
</value>
  </data>
</root>